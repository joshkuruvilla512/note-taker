User Story
AS A user, I want to be able to write and save notes

I WANT to be able to delete notes I've written before

SO THAT I can organize my thoughts and keep track of tasks I need to complete
-----------------------------------------------------------------------------------------------------

1. Set up the Server

2. Set up the Server Routings
    HTML Routings

HTML Routes
    GET `/notes` - Should return the `notes.html` file.

    GET `*` - Should return the `index.html` file

db.json
    File on the backend that will be used to store and retrieve notes using the `fs` module.

API Routes

  GET `/api/notes` - Should read the `db.json` file and return all saved notes as JSON.

  POST `/api/notes` - Should recieve a new note to save on the request body, add it to the `db.json` file, and then return the new note to the client.

  DELETE `/api/notes/:id` - Should recieve a query paramter containing the id of a note to delete. This means you'll need to find a way to give each note a unique `id` when it's saved. In order to delete a note, you'll need to read all notes from the `db.json` file, remove the note with the given `id` property, and then rewrite the notes to the `db.json` file.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Acceptance Criteria
Application should allow users to create and save notes.

Application should allow users to view previously saved notes.

Application should allow users to delete previously saved notes.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------














const router = require("express").Router();
const store = require("../db/store.js");

router.get("/notes", function (req, res) {
    store
        .getNotes()
        .then(notes => res.json(notes))
        .catch(err => res.status(500).json(err))
});

router.post("/notes", function (req, res) {
    store
        .addNote(req.body)
        .then(note => res.json(note))
        .catch(err => res.status(500).json(err))
})

router.delete("/notes/:id", function (req, res) {
    store
        .removeNote(req.params.id)
        .then(() => res.json({ ok: true }))
        .catch(err => res.status(500).json(err))
});

module.exports = router;